@using InspiniaDevExtreme.Models

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Basic Table</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
                <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                    <i class="fa fa-wrench"></i>
                </a>
                <ul class="dropdown-menu dropdown-user">
                    <li>
                        <a href="#">Config option 1</a>
                    </li>
                    <li>
                        <a href="#">Config option 2</a>
                    </li>
                </ul>
                <a class="close-link">
                    <i class="fa fa-times"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            @(Html.DevExtreme().DataGrid<Order>()
                                .ShowBorders(true)
                                .DataSource(d => d.Mvc().Controller("Orders").LoadAction("Get").Key("OrderID"))
                                .Columns(columns =>
                                {
                                    columns.AddFor(m => m.OrderID);
                                    columns.AddFor(m => m.OrderDate);
                                    columns.AddFor(m => m.CustomerName);
                                    columns.AddFor(m => m.ShipCountry);
                                    columns.AddFor(m => m.ShipCity);
                                })
                                .Paging(p => p.PageSize(10))
                                .FilterRow(f => f.Visible(true))
                                .HeaderFilter(f => f.Visible(true))
                                .GroupPanel(p => p.Visible(true))
                                .Grouping(g => g.AutoExpandAll(false))
                                .RemoteOperations(true)
                                .Summary(s => s
                                    .TotalItems(totalItems =>
                                    {
                                        totalItems.AddFor(m => m.ShipCity).SummaryType(SummaryType.Count);
                                    })
                                    .GroupItems(groupItems =>
                                    {
                                        groupItems.Add().SummaryType(SummaryType.Count);
                                    })
                                )
            )
        </div>
    </div>
</div>